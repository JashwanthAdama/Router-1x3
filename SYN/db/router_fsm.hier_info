|router_fsm
clock => temp[0].CLK
clock => temp[1].CLK
clock => state~1.DATAIN
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => state.OUTPUTSELECT
resetn => temp.OUTPUTSELECT
resetn => temp.OUTPUTSELECT
pkt_valid => always2.IN1
pkt_valid => always2.IN1
pkt_valid => always2.IN1
pkt_valid => always2.IN0
data_in[0] => temp.DATAB
data_in[0] => Equal3.IN1
data_in[0] => Equal4.IN0
data_in[0] => Equal5.IN1
data_in[1] => temp.DATAB
data_in[1] => Equal3.IN0
data_in[1] => Equal4.IN1
data_in[1] => Equal5.IN0
fifo_full => next_state.OUTPUTSELECT
fifo_full => next_state.OUTPUTSELECT
fifo_full => Selector3.IN1
fifo_full => Selector0.IN3
fifo_full => always2.IN1
fifo_full => next_state.LOAD_AFTER_FULL.DATAB
fifo_empty_0 => always2.IN1
fifo_empty_0 => always2.IN1
fifo_empty_0 => always2.IN1
fifo_empty_1 => always2.IN1
fifo_empty_1 => always2.IN1
fifo_empty_1 => always2.IN1
fifo_empty_2 => always2.IN1
fifo_empty_2 => always2.IN1
fifo_empty_2 => always2.IN1
soft_reset_0 => always1.IN1
soft_reset_1 => always1.IN1
soft_reset_2 => always1.IN1
parity_done => always2.IN0
parity_done => always2.IN0
low_packet_valid => always2.IN1
low_packet_valid => always2.IN1
write_enb_reg << write_enb_reg.DB_MAX_OUTPUT_PORT_TYPE
detect_add << detect_add.DB_MAX_OUTPUT_PORT_TYPE
ld_state << ld_state.DB_MAX_OUTPUT_PORT_TYPE
laf_state << laf_state.DB_MAX_OUTPUT_PORT_TYPE
lfd_state << lfd_state.DB_MAX_OUTPUT_PORT_TYPE
full_state << full_state.DB_MAX_OUTPUT_PORT_TYPE
rst_int_reg << rst_int_reg.DB_MAX_OUTPUT_PORT_TYPE
busy << busy.DB_MAX_OUTPUT_PORT_TYPE


